<?xml version="1.0"?>
<dirarchy>
    <vars>
        <var name="namespace" type="gstr" default="ns" />
        <var name="base_name" type="gstr" default="core" regex="[a-z_]{4,}" />
        <var name="subdir" type="gstr" />
        <var name="version" type="int" default="1" />
        <var name="rand_i" rand_value="int, 45, 100" />
        <var name="rand_f" rand_value="float, -4.1, 12.354" />
        <var name="rand_snake_s" rand_value="snake_case, 2, 10" />
        <var name="rand_sisy_s" rand_value="lower_sisy, 2, 10" />
        <var name="rand_format_cvqd" rand_value="format_cvqd, 'Cvcvq_cvcvq_cv_dd'" />
    </vars>
    <dir path="{namespace}-{base_name}">
        <dir path="include/{namespace}/{base_name}">
            <file path="{subdir}/feature.hpp">
#pragma once

inline namespace {namespace}
{{
namespace {base_name}
{{
    std::string name();
    int version();
    inline std::string inline_name()
    {{
        return "{{!{base_name}}} {{{base_name}}} {{namespace}}";
    }}
}}
}}
            </file>
        </dir>
        <dir path="src/{namespace}/{base_name}">
            <file path="{subdir}/feature.cpp" format="super_format">
#include &lt;{namespace}/{base_name}/feature.hpp&gt;

inline namespace {namespace}
{
namespace {base_name}
{
    std::string name()
    {
        return "{!{base_name}} {{{base_name}}} {{namespace}}";
    }
    int version() { return {version}; }
}
}
            </file>
        </dir>
        <file path="README.md">
# Project {namespace}-{base_name}
{rand_i}
{rand_f}
{rand_snake_s}
{rand_sisy_s}
{rand_format_cvqd}
        </file>
    </dir>
</dirarchy>
